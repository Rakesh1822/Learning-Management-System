package com.te.lms.service;

import java.util.List;

import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mockito;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.google.common.collect.Lists;
import com.te.lms.entity.AppUser;
import com.te.lms.entity.Mentor;
import com.te.lms.entity.Roles;
import com.te.lms.entity.Skills;
import com.te.lms.enums.Status;
import com.te.lms.repository.AppUserRepository;
import com.te.lms.repository.MentorRepository;
import com.te.lms.repository.RolesRepository;

@SpringBootTest
class TestAdminService {

	@MockBean
	private MentorRepository mentorRepository;

	@MockBean
	private AppUserRepository appUserRepository;

	private RolesRepository rolesRepository;
	
	@InjectMocks
	private AdminService adminService;

	@Test
	public void testRegisterMentor() {

		Mentor mentor = Mentor.builder().employeeId("TY001").emailId("mentor@gmail.com")
				.skills(List.of(Skills.builder().skillName("java").build())).mentorName("Rakesh")
				.mentorStatus(Status.ACTIVE).build();

		AppUser appUser = AppUser.builder().username(mentor.getEmployeeId()).password("Welcome123")
				.roles(Lists.newArrayList()).build();
		Roles role = Roles.builder().roleName("ROLE_MENTOR").appUser(Lists.newArrayList()).build();
		appUser.getRoles().add(role);
		role.getAppUser().add(appUser);

		Mockito.when(rolesRepository)
		Mockito.when(appUserRepository.save(appUser)).thenReturn(appUser);
		Mockito.when(mentorRepository.save(mentor)).thenReturn(mentor);

	}

}
